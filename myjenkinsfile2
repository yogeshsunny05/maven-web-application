pipeline{
    agent any
options {
  timestamps ()
}
triggers {
  pollSCM ('* * * * *')
}

    tools {
  maven 'maven-3.9.4'
}
    stages {
  stage('branchcheckout') {
    steps {
      git branch: 'development', credentialsId: '5f8e2813-4402-4f85-aa70-5b2a8d29122e', url: 'https://github.com/yogeshsunny05/maven-web-application.git'
    }
  }

  stage('executesoonarqubereport') {
    steps {
      sh "mvn sonar:sonar"
    }
  }

  stage('upload into nexus') {
    steps {
      sh "mvn deploy"
    }
  }
/*stage('deploy into tomcat') {
  steps {
     sshagent(['9c391efe-3d6f-47af-a9cd-692e43763ca3']) {
    sh " scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.40.59:/opt/apache-tomcat-9.0.80/webapps "
}
  }
}*/

}//stages_closing
//slackNotificaions
post {
    success {
   sendSlackNotifications(currentBuild.result)
  }
    failure {
    sendSlackNotifications(currentBuild.result)
  }
}

}//pipeline_closing
def sendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }
// Send notifications
  slackSend (color: colorCode, message: summary, channel: '#buildnotifications' )
}
